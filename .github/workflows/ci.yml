name: CI

on:
  schedule:
    - cron: '7 04 */25 * *'
  push:
    branches: [main]
  pull_request:
    branches: [main]
  repository_dispatch:

env:
  PACKAGE_NAME: SpotHeroSDK
  XCODEBUILD_WORKSPACE: SpotHeroSDK.xcworkspace
  XCODEBUILD_SCHEME: SpotHeroSDK
  DEPLOY_DIRECTORY: deploy

jobs:
  lint:
    name: Lint
    runs-on: macos-13
    permissions:
      pull-requests: write
    env:
      DANGER_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3.5.0
      - name: Install Dependencies
        run: |
          bundle install
          brew install swiftformat
      - name: Run Danger
        run: sh ./scripts/danger_lint.sh
  iOS:
    name: iOS ${{ matrix.os }} ${{ matrix.device_name }}
    runs-on: macos-13
    needs: [lint]
    strategy:
      matrix:
        device_name: ["iPhone 15 Pro", "iPad Pro (12.9-inch) (6th generation)"]
        os: ["17.0"]
        xcode_version: ["15.0.0"]
    steps:
      - name: Checkout
        uses: actions/checkout@v3.5.0
        uses: maxim-lobanov/setup-xcode@v1
        with:
            xcode-version: '15.0.0'
#      - name: Switch Xcode Version
#        run: sudo xcode-select -switch "/Applications/Xcode_${{ matrix.xcode_version }}.app"
      - name: Run Tests
        run: sh ./scripts/xcode_build.sh "name=${{ matrix.device_name }},OS=${{ matrix.os }},platform=iOS Simulator"
      - name: Upload Step Output
        uses: actions/upload-artifact@v1
        with:
          name: "iOS ${{ matrix.os }} ${{ matrix.device_name }} Output"
          path: ${{ env.DEPLOY_DIRECTORY }}
  macOS:
    name: macOS
    runs-on: macos-13
    needs: [lint]
    strategy:
      matrix:
        xcode_version: ["15.0.0"]
    steps:
      - name: Checkout
        uses: actions/checkout@v3.5.0
        uses: maxim-lobanov/setup-xcode@v1
        with:
            xcode-version: '15.0.0'
#      - name: Switch Xcode Version
#        run: sudo xcode-select -switch "/Applications/Xcode_${{ matrix.xcode_version }}.app"
      - name: Run Tests
        run: sh ./scripts/xcode_build.sh "platform=macOS"
      - name: Upload Step Output
        uses: actions/upload-artifact@v1
        with:
          name: "macOS 13 Output"
          path: ${{ env.DEPLOY_DIRECTORY }}
  tvOS:
    name: tvOS ${{ matrix.os }} ${{ matrix.device_name }}
    runs-on: macos-13
    needs: [lint]
    strategy:
      matrix:
        device_name: ["Apple TV 4K (3rd generation)"]
        os: ["17.0"]
        xcode_version: ["15.0.0"]
    steps:
      - name: Checkout
        uses: actions/checkout@v3.5.0
        uses: maxim-lobanov/setup-xcode@v1
        with:
            xcode-version: '15.0.0'
#      - name: Switch Xcode Version
#        run: sudo xcode-select -switch "/Applications/Xcode_${{ matrix.xcode_version }}.app"
      - name: Run Tests
        run: sh ./scripts/xcode_build.sh "name=${{ matrix.device_name }},OS=${{ matrix.os }},platform=tvOS Simulator"
      - name: Upload Step Output
        uses: actions/upload-artifact@v1
        with:
          name: "tvOS ${{ matrix.os }} ${{ matrix.device_name }} Output"
          path: ${{ env.DEPLOY_DIRECTORY }}
  spm:
    name: SPM (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    needs: [lint]
    strategy:
      matrix:
        os: [macos-13]
        xcode_version: ["15.0.0"]
    steps:
      - name: Checkout
        uses: actions/checkout@v3.5.0
        uses: maxim-lobanov/setup-xcode@v1
        with:
            xcode-version: '15.0.0'
#      - name: Switch Xcode Version
#        run: sudo xcode-select -switch "/Applications/Xcode_${{ matrix.xcode_version }}.app"
      - name: Run Tests
        run: sh ./scripts/swift_build.sh
      - name: Upload Step Output
        uses: actions/upload-artifact@v1
        with:
          name: SPM Output
          path: ${{ env.DEPLOY_DIRECTORY }}
